{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","persons","getAll","axios","get","create","newObject","post","remove","id","delete","concat","update","put","then","response","data","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addPerson","event","console","log","preventDefault","state","map","person","name","indexOf","newName","window","confirm","find","p","changedperson","objectSpread","number","newNumber","personService","setState","personsToShow","filter","successmessage","setTimeout","render","catch","error","response2","alert","personObject","removePerson","personname","handleNameChange","target","value","handleNumberChange","handleFilterChange","toLowerCase","includes","_this2","react_default","a","createElement","App_Notification","message","App_Filtering","App_AddNewPerson","App_Persons","React","Component","Filtering","onChange","AddNewPerson","onSubmit","type","Persons","_ref","App_Person","key","Person","_ref2","onClick","Notification","_ref3","className","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f5115b7d.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react';\r\nimport personService from './services/persons'\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        persons: [\r\n          ],\r\n          personsToShow: [\r\n          ],\r\n      newName: '',\r\n      newNumber: '',\r\n      filter:'',\r\n      successmessage: null\r\n    }\r\n    console.log('constructor')\r\n  }\r\n\r\n  componentDidMount() {\r\n    personService\r\n      .getAll()\r\n      .then(response => {\r\n        this.setState({ persons: response.data, personsToShow: response.data })\r\n      })\r\n  }\r\n\r\n  addPerson = (event) => {\r\n    console.log('Adding new person')\r\n    event.preventDefault()\r\n    if((this.state.persons.map(person => person.name)).indexOf(this.state.newName)>-1){\r\n      console.log('Person exists')\r\n      if (window.confirm(\"Haluatko vaihtaa käyttäjän \" + this.state.newName + \" numeron?\")) { \r\n        console.log('Changing number for ' + this.state.newName)\r\n\r\n        const person = this.state.persons.find(p => p.name === this.state.newName)\r\n        const changedperson = { ...person, number: this.state.newNumber }\r\n        console.log(changedperson)\r\n\r\n        personService\r\n        .update(person.id, changedperson)\r\n        .then(response => {\r\n          this.setState({\r\n            persons: this.state.persons.map(p => p.id !== person.id ? p : changedperson),\r\n            personsToShow: this.state.persons.map(p => p.id !== person.id ? p : changedperson),\r\n            newName: '',\r\n            newNumber: '',\r\n            filter: '',\r\n            successmessage: \"Käyttäjän \" + this.state.newName + \" numero vaihdettu!\"\r\n          })\r\n          setTimeout(() => {\r\n            this.setState({successmessage: null})\r\n          }, 5000)\r\n          this.render()\r\n        })\r\n        .catch(error => {\r\n          personService\r\n          .getAll()\r\n          .then(response2 => {\r\n            this.setState({ persons: response2.data, personsToShow: response2.data })\r\n          alert(`eipä löytyny nimmee ennää palvelimelt, yritäpäs uusiksi`)\r\n          })\r\n    \r\n        })\r\n      }\r\n    } \r\n    else\r\n    {\r\n        const personObject = {\r\n            name: this.state.newName,\r\n            number: this.state.newNumber\r\n        }\r\n       \r\n        personService\r\n        .create(personObject)\r\n        .then(response => {\r\n            this.setState({\r\n                persons: this.state.persons.concat(response.data),\r\n                personsToShow: this.state.persons.concat(response.data),\r\n                newName: '',\r\n                newNumber: '',\r\n                filter: '',\r\n                successmessage: \"Käyttäjä \" + this.state.newName + \" lisätty palvelimelle.\"\r\n            })\r\n        })\r\n        setTimeout(() => {\r\n          this.setState({successmessage: null})\r\n        }, 5000)\r\n    }\r\n  }\r\n\r\n  removePerson = (id) => {\r\n    return() => {\r\n      const personname = (this.state.persons.find(p => p.id ===id).name)\r\n      if (window.confirm(\"Haluatko poistaa käyttäjän \" + (this.state.persons.find(p => p.id ===id).name) + \"?\")) { \r\n        console.log('Removing person ' + id);\r\n        personService\r\n        .remove(id)\r\n        .then(response => {\r\n          personService\r\n          .getAll()\r\n          .then(response => {\r\n            this.setState({ \r\n              persons: response.data, \r\n              personsToShow: response.data,\r\n              successmessage: \"Käyttäjä \" + personname + \" poistettu palvelimelta.\"\r\n             })\r\n            console.log(\"Loaded data after removal\")\r\n          })\r\n      \r\n        })\r\n        setTimeout(() => {\r\n          this.setState({successmessage: null})\r\n        }, 5000)\r\n          }\r\n\r\n    \r\n  }\r\n}\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({ newName: event.target.value })\r\n  }\r\n\r\n  handleNumberChange = (event) => {\r\n    this.setState({ newNumber: event.target.value })\r\n  }\r\n\r\n  handleFilterChange = (event) => {\r\n    const personsToShow = this.state.persons.filter(person => person.name.toLowerCase().includes(event.target.value.toLowerCase()))\r\n    this.setState({filter: event.target.value, personsToShow})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Puhelinluettelo</h2>\r\n        <Notification message = {this.state.successmessage} />\r\n        <Filtering state = {this.state} handleFilterChange={this.handleFilterChange} />\r\n        <AddNewPerson state = {this.state} handleNameChange={this.handleNameChange} handleNumberChange={this.handleNumberChange} addPerson={this.addPerson}/>\r\n        <Persons personsToShow={this.state.personsToShow} removePerson={this.removePerson}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst Filtering = (props) => {\r\n  return(\r\n    <form >\r\n    <div>\r\n    <h2>Rajaa luetteloa</h2>\r\n      Rajaus: \r\n      <input \r\n      value={props.state.filter}\r\n      onChange={props.handleFilterChange} \r\n      />\r\n    </div>\r\n  </form>\r\n)\r\n}\r\n\r\nconst AddNewPerson = (props) => {\r\n  return(\r\n    <div>\r\n      <h2>Lisää uusi</h2>\r\n      <form onSubmit={props.addPerson}>\r\n          <div>\r\n            Nimi: \r\n            <input \r\n            value={props.state.newName}\r\n            onChange={props.handleNameChange} \r\n            />\r\n          </div>\r\n          <div>\r\n              Numero: \r\n            <input \r\n            value={props.state.newNumber}\r\n            onChange={props.handleNumberChange} \r\n            />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">Lisää</button>\r\n          </div>\r\n        </form>\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nconst Persons = ({personsToShow, removePerson}) => {\r\n    return(\r\n        <div>\r\n        <h2>Numerot</h2>\r\n            {personsToShow.map(person => \r\n            <Person \r\n              key={person.id} \r\n              person={person} \r\n              removePerson={removePerson(person.id)}\r\n              />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Person = ({person, removePerson}) => {\r\n  return(\r\n    <p>{person.name} {person.number} <button onClick={removePerson}>Poista</button></p>\r\n  )\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className=\"successmessage\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}